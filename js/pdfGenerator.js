/**
 * Sippy - PDF Report Generator
 * User's hydration progress report
 */

const SippyPDF = {
    /**
     * Generate PDF report
     */
    async generateReport() {
        if (!window.jspdf) {
            SippyUtils.showToast('PDF library not loaded');
            return;
        }
        
        try {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // Get data
            const stats = SippyData.getStats();
            const weekHistory = SippyData.getWeekHistory();
            const todayIntake = SippyData.getTotalIntake();
            const goal = window.SippyHydration ? SippyHydration.currentGoal : 2000;
            const userData = SippyData.getUserData();
            
            // Title
            doc.setFontSize(24);
            doc.setTextColor(0, 119, 190);
            doc.text('üíß Sippy Hydration Report', 20, 20);
            
            // User name
            doc.setFontSize(14);
            doc.setTextColor(71, 128, 150);
            if (userData.name) {
                doc.text(`For: ${userData.name}`, 20, 35);
            }
            doc.text(`Date: ${SippyUtils.formatDate()}`, 20, 45);
            
            // Motivational message
            doc.setFontSize(16);
            doc.setTextColor(0, 188, 212);
            const percent = Math.round((todayIntake / goal) * 100);
            if (percent >= 100) {
                doc.text('üéâ Great job! You hit your daily goal!', 20, 60);
            } else if (percent >= 75) {
                doc.text(`üí™ You're doing amazing! ${percent}% complete!`, 20, 60);
            } else {
                doc.text(`Keep going! You're ${percent}% there!`, 20, 60);
            }
            
            // Today's Stats
            doc.setFontSize(12);
            doc.setTextColor(0, 0, 0);
            doc.text('Today\'s Hydration:', 20, 75);
            doc.setFontSize(14);
            doc.text(`${todayIntake} ml / ${goal} ml (${percent}%)`, 30, 85);
            
            // Weekly Stats
            doc.setFontSize(12);
            doc.text('7-Day Hydration Summary:', 20, 100);
            
            let y = 110;
            weekHistory.forEach((day, index) => {
                const dayPercent = Math.round((day.total / goal) * 100);
                const bar = '‚ñà'.repeat(Math.floor(dayPercent / 5));
                doc.text(`${day.label}: ${day.total} ml ${bar}`, 30, y);
                y += 8;
            });
            
            // Overall Stats
            y += 10;
            doc.setFontSize(12);
            doc.text('Your Journey:', 20, y);
            y += 10;
            doc.text(`Current Streak: ${stats.currentStreak} days üî•`, 30, y);
            y += 8;
            doc.text(`Total Points: ${stats.points} ‚≠ê`, 30, y);
            y += 8;
            doc.text(`Achievements Unlocked: ${SippyData.getAchievements().length} üèÜ`, 30, y);
            y += 8;
            doc.text(`Weekly Average: ${SippyData.getWeeklyAverage()} ml üìä`, 30, y);
            
            // Fun Fact
            y += 15;
            doc.setFontSize(11);
            doc.setTextColor(79, 195, 247);
            const glassesPerWeek = Math.round(SippyData.getWeeklyAverage() * 7 / 250);
            doc.text(`Fun Fact: You drank approximately ${glassesPerWeek} glasses this week!`, 20, y);
            y += 8;
            const headachesPrevented = Math.floor(stats.totalDrinks / 10);
            doc.text(`You've likely avoided ${headachesPrevented} dehydration headaches! üéØ`, 20, y);
            
            // Footer
            doc.setFontSize(9);
            doc.setTextColor(150, 150, 150);
            doc.text('Generated by Sippy - Your Living Hydration Companion', 20, 280);
            doc.text('Stay Hydrated, Stay Healthy! üíß', 20, 285);
            
            // Save
            doc.save(`Sippy-Report-${SippyUtils.getDateKey()}.pdf`);
            
            SippyUtils.showToast('üìÑ Report downloaded!', 3000);
            
        } catch (error) {
            console.error('Error generating PDF:', error);
            SippyUtils.showToast('Error generating report');
        }
    }
};

// Make available globally
window.SippyPDF = SippyPDF;

